import React from "react";
import { Doughnut } from "react-chartjs-2";
import { Chart as ChartJS, ArcElement, Tooltip, Legend, Title } from "chart.js";
import style from "./Results.module.css";

ChartJS.register(ArcElement, Tooltip, Legend, Title);

export default function VulnerabilityChart({ stats }) {
  const data = {
    labels: ["Critical", "High", "Medium", "Low"],
    datasets: [
      {
        data: [stats.critical, stats.high, stats.medium, stats.low],
        backgroundColor: [
          "#DC3545", // Critical - Red
          "#E94A35", // High - Orange
          "#FFC107", // Medium - Yellow
          "#28A745", // Low - Green
        ],
        borderColor: ["#DC3545", "#E94A35", "#FFC107", "#28A745"],
        borderWidth: 1,
      },
    ],
  };

  const options = {
    responsive: true,
    maintainAspectRatio: false,
    cutout: "70%",
    plugins: {
      legend: {
        display: false,
      },
      tooltip: {
        callbacks: {
          label: function (context) {
            const label = context.label || "";
            const value = context.raw || 0;
            return `${label}: ${value}`;
          },
        },
      },
    },
  };

  const total = Object.values(stats).reduce((acc, curr) => acc + curr, 0);

  return (
    <div className={style.chartContainer}>
      <div className={style.chartWrapper}>
        <Doughnut data={data} options={options} />
        <div className={style.chartCenter}>
          <span>{total}</span>
          <span>Total Findings</span>
        </div>
      </div>
      <div className={style.legend}>
        {data.labels.map((label, index) => (
          <div key={label} className={style.legendItem}>
            <span
              className={style.dot}
              style={{ background: data.datasets[0].backgroundColor[index] }}
            ></span>
            <span>
              {label} ({data.datasets[0].data[index]})
            </span>
          </div>
        ))}
      </div>
    </div>
  );
}
